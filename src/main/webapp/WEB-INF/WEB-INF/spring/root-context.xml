<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
		<!-- Root Context: defines shared resources visible to all other web components -->
		
		<!-- 데이터베이스 연동을 위한 환경설정처리(JDBC 설정) -->
		
		<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
			<property name="driverClassName" value="com.mysql.jdbc.Driver" />
			<property name="url" value="jdbc:mysql://localhost:3306/javaworks"/>
			<property name="username" value="root"/>
			<property name="password" value="1234"/>
		</bean>
		
		
		<!-- MYSQL DBCP(Connection Pool) - JDBC 패키지에서 DBCP 패키지로 클래스명만 바꾸면 설정완료 -->
		<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
			<property name="driverClassName" value="com.mysql.jdbc.Driver" />
			<property name="url" value="jdbc:mysql://localhost:3306/javaworks"/>
			<property name="username" value="root" />
			<property name="password" value="1234" />
			<property name="initialSize" value="5" /> 초기 pool 사이즈 
			<property name="maxActive" value="20" /> 최대 pool 사이즈 
			<property name="validationQuery" value="select 1" /> 커넥션 유효성 검사 쿼리
			<property name="testWhileIdle" value="true" /> 커넥션이 놀고 있을때만 검사처리
			<property name="timeBetweenEvictionRunsMillis" value="60000" /> 60초에 한번씩 처리 - 밀리/초
		</bean> -->
		 
		<!-- MyBatis Spring 연동(모듈설정) - mapper정보설정(MyBatis 설정) -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<!-- mapperLocations : 매퍼의 저장위치 지정 , classpath : 자바의 resources위치 -->
			<property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml"/>
		</bean>
		
		<!-- mapper정보설정후 Template처리를 위한 설정 -->
		<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
			<!-- 생성자를 통한 값넣기 -->
			<constructor-arg index="0" ref="sqlSessionFactory" />
		</bean>
		
		<!-- 가공처리된 매퍼의 정보를 주입하기위한 DAO객체의 위치를 설정 -->
		<mybatis-spring:scan base-package="com.spring.javawspring.dao"/>
		
		<!-- 메일서비스(SMTP)에 필요한 환경설정(gmail.com) -->
		<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
			<property name="host" value="smtp.gmail.com" />
			<property name="port" value="587" />
			<!-- <property name="username" value="jaykaybaek@gmail.com" />
			<property name="password" value="iyvvtmhewtlkkezl" /> -->
			<property name="username" value="saasdfhr@gmail.com" />
			<property name="password" value="imyoqrnwxwejijkl" />
			<!-- 자바환경의 프로퍼티스를 맞춘다 -->
			<property name="javaMailProperties">
				<props>
					<prop key="mail.transport.protocol">smtp</prop>
					<prop key="mail.smtp.starttls.enable">true</prop>
					<prop key="mail.debug">true</prop>
					<prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
					<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
					
				</props>
			</property>
		</bean>
		
		
</beans>
